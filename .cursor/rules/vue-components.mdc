---
description: 
globs: 
alwaysApply: true
---
# Vue Component Patterns

## Component Structure

Components in this project follow Vue 3 Composition API patterns. Reference examples: [Login.vue](mdc:fronts/landing/src/views/Login.vue), [SignUp.vue](mdc:fronts/landing/src/views/SignUp.vue).

### Standard Setup

```vue
<script setup>
import { ref } from 'vue';
import { useRouter } from 'vue-router';
import { useI18n } from 'vue-i18n';

const router = useRouter();
const { t } = useI18n();
const error = ref('');
const isLoading = ref(false);
</script>
```

### Error Handling Pattern

```javascript
const handleAction = async () => {
  error.value = '';
  isLoading.value = true;
  
  try {
    const { data, error: apiError } = await apiCall();
    
    if (apiError) {
      throw new Error(apiError.message || 'Operation failed');
    }
    
    // Success handling
    router.push('/success-route');
  } catch (err) {
    const errorMessage = err instanceof Error ? err.message : 'Something went wrong. Please try again.';
    error.value = errorMessage;
    console.error('Action error:', err);
  } finally {
    isLoading.value = false;
  }
};
```

### i18n Usage

Always provide fallbacks for translation keys:

```javascript
// Good
{{ $t('auth.signIn') }}
{{ $t('auth.passwordRequirements') || 'Password must be at least 8 characters' }}

// In scripts
t('auth.emailRequired') || 'Email is required'
```

### Styling Patterns

Use Tailwind CSS classes consistently. Common patterns:

```vue
<!-- Containers -->
<div class="min-h-screen flex items-center justify-center bg-stone-50">
<div class="max-w-md w-full p-6 bg-white rounded-xl shadow-lg border border-stone-200">

<!-- Form fields -->
<div class="space-y-4">
<div class="p-field">

<!-- Buttons -->
<Button class="w-full py-2 px-4 bg-emerald-600 hover:bg-emerald-700 text-white font-medium rounded-lg shadow-sm hover:shadow-md transition-colors">

<!-- Input fields -->
<InputText class="w-full px-4 py-2 border border-stone-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500">
```

## Router Integration

Standard routing pattern for authenticated actions:

```javascript
// Redirect with return URL support
router.push(router.currentRoute.value.query.returnUrl?.toString() || '/app/dashboard');

// Simple redirect
router.push('/success-route');
```

## State Management

Use reactive refs for component state:

```javascript
const error = ref('');
const isLoading = ref(false);
const formData = ref({
  email: '',
  password: ''
});
```

