
  {{NAME_ROUTE_SANITIZED}}-docker:
    needs: [publish]
    runs-on: ubuntu-latest
    if: contains(needs.publish.outputs.changed, '{{NAME_ROUTE}}')
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://npm.pkg.github.com/'
          cache: 'yarn'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ vars.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - id: package-json
        name: Read package.json
        run: |
          echo packageJSON=$(cat {{LOCATION}}/package.json) >> $GITHUB_OUTPUT

      - name: Publish ${{needs.publish.outputs.versionType}} - ${{ github.ref_name }} 
        if: contains(github.ref_name, 'develop') || contains(github.ref_name, 'staging')
        uses: docker/build-push-action@v5
        with:
          context: .
          file: {{LOCATION}}/Dockerfile
          tags: | 
            ghcr.io/runeya/monorepo/{{NAME_ROUTE}}:${{ github.ref_name }} 
          push: true
          build-args: |
            TURBO_TEAM=${{ vars.TURBO_TEAM }}
            TURBO_TOKEN=${{ secrets.TURBO_TOKEN }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Publish Latest ${{needs.publish.outputs.versionType}} - ${{ github.ref_name }} 
        if: contains(github.ref_name, 'master')
        uses: docker/build-push-action@v5
        with:
          context: .
          file: {{LOCATION}}/Dockerfile
          tags: | 
            ghcr.io/runeya/monorepo/{{NAME_ROUTE}}:latest
            ghcr.io/runeya/monorepo/{{NAME_ROUTE}}:${{fromJson(steps.package-json.outputs.packageJson).version}}
          push: true
          build-args: |
            TURBO_TEAM=${{ vars.TURBO_TEAM }}
            TURBO_TOKEN=${{ secrets.TURBO_TOKEN }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
 